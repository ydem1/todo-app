{"version":3,"sources":["utils/fetchClient.ts","api/todos.ts","components/TodosContext.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/Main.tsx","components/TodosFilter.tsx","components/Footer.tsx","utils/getNumberActiveTodo.tsx","components/Header.tsx","components/Error.tsx","components/TodoApp.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","client","updateTodo","id","title","completed","userId","initiatTodos","TodosContext","React","createContext","todos","setTodos","filterOption","setFilterOptions","USER_ID","errorMessage","setErrorMessage","TodosProvider","children","useState","useEffect","catch","value","useMemo","Provider","TodoItem","todo","deleteTodo","updatedTodo","editValue","setEditValue","editTodosId","setEditTodosId","inputRef","useRef","useContext","current","focus","updateTitle","newTitle","newTodo","newTodos","index","findIndex","currentTodo","splice","filter","className","cn","editing","onDoubleClick","data-cy","type","onChange","checked","onClick","onSubmit","e","preventDefault","placeholder","event","target","onBlur","trim","ref","onKeyPress","key","TodoList","visibleTodo","todoId","error","todoService","map","Main","TodosFilter","href","selected","Footer","isVisibleClearBtn","some","countTodosActive","number","forEach","getNumberActiveTodo","Header","inputValue","setInputValue","isActive","every","active","completedValue","updatedTodos","updatePromises","all","isErrorHidden","handleDeleteButton","hidden","TodoApp","length","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.eebdabd5.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // DON'T change the delay it is required for tests\n  return wait(100)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = ({ title, completed, userId }: Omit<Todo, 'id'>) => {\n  return client.post<Todo>('/todos', { title, completed, userId });\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const updateTodo = ({\n  id, title, completed, userId,\n}: Todo) => {\n  return client.patch<Todo>(`/todos/${id}`, { title, completed, userId });\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Todo } from '../types/Todo';\nimport { FilterOptions } from '../types/FilterOptions';\nimport { getTodos } from '../api/todos';\n\nconst initiatTodos: Todo[] = [];\nconst USER_ID_INITAT = 11930;\n\ninterface TodosContextType {\n  todos: Todo[],\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  filterOption: FilterOptions,\n  setFilterOptions: (filterOption: FilterOptions) => void,\n  USER_ID: number,\n  errorMessage: string,\n  setErrorMessage: (errorMessage: string) => void,\n}\n\nexport const TodosContext = React.createContext<TodosContextType>({\n  todos: initiatTodos,\n  setTodos: () => { },\n  filterOption: 'all',\n  setFilterOptions: () => { },\n  USER_ID: USER_ID_INITAT,\n  errorMessage: '',\n  setErrorMessage: () => { },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const TodosProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState(initiatTodos);\n  const [filterOption, setFilterOptions]\n    = useState<FilterOptions>('all');\n  const USER_ID = USER_ID_INITAT;\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    getTodos(USER_ID).then(setTodos)\n      .catch(() => {\n        setErrorMessage('Unable to load todos');\n      });\n  }, []);\n\n  const value = useMemo(() => ({\n    todos,\n    setTodos,\n    filterOption,\n    setFilterOptions,\n    USER_ID,\n    errorMessage,\n    setErrorMessage,\n  }), [\n    todos,\n    filterOption,\n    errorMessage]);\n\n  return (\n    <TodosContext.Provider value={value}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n} from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../types/Todo';\nimport { TodosContext } from './TodosContext';\n\ntype Props = {\n  todo: Todo,\n  deleteTodo: (id: number) => Promise<unknown>,\n  updatedTodo: (newTodo: Todo) => Promise<unknown>,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  deleteTodo,\n  updatedTodo,\n}) => {\n  const [editValue, setEditValue] = useState(todo.title);\n  const [editTodosId, setEditTodosId] = useState(0);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const { todos, setTodos, USER_ID } = useContext(TodosContext);\n\n  useEffect(() => {\n    if (editTodosId === todo.id) {\n      inputRef.current?.focus();\n    }\n  }, [editTodosId, todo.id]);\n\n  const updateTitle = (newTitle: string) => {\n    if (!newTitle) {\n      const newTodos = todos.filter(currentTodo => todo.id !== currentTodo.id);\n\n      deleteTodo(todo.id)\n        .then(() => {\n          setTodos(newTodos);\n          setEditTodosId(0);\n        });\n    } else {\n      const newTodo: Todo = {\n        id: todo.id,\n        title: newTitle,\n        userId: USER_ID,\n        completed: todo.completed,\n      };\n\n      const newTodos = [...todos];\n      const index = newTodos.findIndex(currentTodo => (\n        currentTodo.id === newTodo.id));\n\n      newTodos.splice(index, 1, newTodo);\n\n      updatedTodo(newTodo)\n        .then(() => {\n          setTodos(newTodos);\n          setEditTodosId(0);\n        });\n    }\n  };\n\n  const updatedComplete = () => {\n    const newTodo: Todo = {\n      id: todo.id,\n      title: todo.title,\n      userId: USER_ID,\n      completed: !todo.completed,\n    };\n\n    const newTodos = [...todos];\n    const index = newTodos.findIndex(currentTodo => (\n      currentTodo.id === newTodo.id));\n\n    newTodos.splice(index, 1, newTodo);\n\n    updatedTodo(newTodo)\n      .then(() => setTodos(newTodos));\n  };\n\n  const handlePressEnterEdit\n    = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        updateTitle(editValue.trim());\n        setEditValue(editValue.trim());\n      }\n    };\n\n  const handleOnblurEdit = () => {\n    updateTitle(editValue.trim());\n    setEditValue(editValue.trim());\n  };\n\n  const handleChangeEditValue\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setEditValue(event.target.value);\n    };\n\n  const handleDeleteBtn = () => {\n    const newTodos = [...todos];\n    const index = newTodos.findIndex(currentTodo => currentTodo.id === todo.id);\n\n    newTodos.splice(index, 1);\n\n    deleteTodo(todo.id)\n      .then(() => setTodos(newTodos));\n  };\n\n  return (\n    <div\n      className={cn('todo',\n        { completed: todo.completed },\n        { editing: editTodosId === todo.id })}\n      onDoubleClick={() => setEditTodosId(todo.id)}\n      data-cy=\"Todo\"\n    >\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n      <label className=\"todo__status-label\">\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          id={`toggle-view-${todo.id}`}\n          onChange={updatedComplete}\n          checked={todo.completed}\n        />\n      </label>\n\n      {\n        editTodosId !== todo.id ? (\n          <>\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label data-cy=\"TodoTitle\" className=\"todo__title\">\n              {todo.title}\n            </label>\n\n            <button\n              type=\"button\"\n              className=\"todo__remove\"\n              data-cy=\"TodoDelete\"\n              onClick={handleDeleteBtn}\n            >\n              ×\n            </button>\n          </>\n        ) : (\n          <form onSubmit={(e) => e.preventDefault()}>\n            <input\n              data-cy=\"TodoTitleField\"\n              type=\"text\"\n              className=\"todo__title-field\"\n              placeholder=\"Empty todo will be deleted\"\n              value={editValue}\n              onChange={handleChangeEditValue}\n              onBlur={handleOnblurEdit}\n              ref={inputRef}\n              onKeyPress={handlePressEnterEdit}\n            />\n          </form>\n        )\n      }\n\n      {/* overlay will cover the todo while it is being updated */}\n      <div data-cy=\"TodoLoader\" className=\"modal overlay\">\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useContext } from 'react';\nimport { TodosContext } from './TodosContext';\nimport { TodoItem } from './TodoItem';\nimport * as todoService from '../api/todos';\nimport { Todo } from '../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const {\n    todos,\n    setErrorMessage,\n    filterOption,\n  } = useContext(TodosContext);\n\n  const visibleTodo = todos.filter(todo => {\n    switch (filterOption) {\n      case 'all':\n        return true;\n\n      case 'active':\n        return !todo.completed;\n\n      case 'completed':\n        return todo.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  const deleteTodo = (id: number) => {\n    return todoService.deleteTodo(id)\n      .catch((error) => {\n        setErrorMessage('Unable to delete a todo');\n        throw error;\n      });\n  };\n\n  const updatedTodo = (newTodo: Todo) => {\n    return todoService.updateTodo(newTodo)\n      .catch((error) => {\n        setErrorMessage('Unable to update a todo');\n        throw error;\n      });\n  };\n\n  return (\n    <ul className=\"todo-list\" data-cy=\"todosList\">\n      {visibleTodo.map(todo => (\n        <TodoItem\n          todo={todo}\n          deleteTodo={deleteTodo}\n          updatedTodo={updatedTodo}\n          key={todo.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { TodoList } from './TodoList';\n\nexport const Main: React.FC = () => {\n  return (\n    <section className=\"todoapp__main\">\n      <TodoList data-cy=\"todoList\" />\n    </section>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { TodosContext } from './TodosContext';\n\nexport const TodosFilter: React.FC = () => {\n  const {\n    filterOption,\n    setFilterOptions,\n  } = useContext(TodosContext);\n\n  const handleClickAll = () => {\n    setFilterOptions('all');\n  };\n\n  const handleClickActive = () => {\n    setFilterOptions('active');\n  };\n\n  const handleClickCompleted = () => {\n    setFilterOptions('completed');\n  };\n\n  return (\n    <nav className=\"filter\" data-cy=\"FilterOptions\">\n      <a\n        href=\"#/\"\n        data-cy=\"FilterOptionsLinkAll\"\n        className={cn(\n          'filter__link',\n          { selected: filterOption === 'all' },\n        )}\n        onClick={handleClickAll}\n      >\n        All\n      </a>\n\n      <a\n        href=\"#/active\"\n        data-cy=\"FilterOptionsLinkActive\"\n        className={cn(\n          'filter__link',\n          { selected: filterOption === 'active' },\n        )}\n        onClick={handleClickActive}\n      >\n        Active\n      </a>\n\n      <a\n        href=\"#/completed\"\n        onClick={handleClickCompleted}\n        data-cy=\"FilterOptionsLinkCompleted\"\n        className={cn(\n          'filter__link',\n          { selected: filterOption === 'completed' },\n        )}\n      >\n        Completed\n      </a>\n    </nav>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodosContext } from './TodosContext';\nimport { getNumberActiveTodo } from '../utils/getNumberActiveTodo';\nimport { TodosFilter } from './TodosFilter';\n\nexport const Footer: React.FC = () => {\n  const {\n    todos,\n    setTodos,\n  } = useContext(TodosContext);\n\n  const handleDeleteCompleted = () => {\n    const newTodos = todos.filter(todo => !todo.completed);\n\n    setTodos(newTodos);\n  };\n\n  const isVisibleClearBtn = todos.some(todo => todo.completed);\n  const countTodosActive = getNumberActiveTodo(todos);\n\n  return (\n    <footer data-cy=\"Footer\" className=\"todoapp__footer\">\n      <span\n        className=\"todo-count\"\n        data-cy=\"TodosCounter\"\n      >\n        {`${countTodosActive} item${countTodosActive !== 1 ? 's' : ''} left`}\n      </span>\n\n      <TodosFilter />\n\n      {isVisibleClearBtn && (\n        <button\n          type=\"button\"\n          className=\"todoapp__clear-completed\"\n          data-cy=\"ClearCompletedButton\"\n          onClick={handleDeleteCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const getNumberActiveTodo = (todos: Todo[]) => {\n  let number = 0;\n\n  todos.forEach(todo => {\n    if (!todo.completed) {\n      number += 1;\n    }\n  });\n\n  return number;\n};\n","import cn from 'classnames';\nimport React, {\n  useContext, useEffect, useRef, useState,\n} from 'react';\nimport { TodosContext } from './TodosContext';\nimport * as todoService from '../api/todos';\n\n/* eslint-disable jsx-a11y/control-has-associated-label */\n\nexport const Header: React.FC = () => {\n  const [inputValue, setInputValue] = useState('');\n  const {\n    todos,\n    setTodos,\n    setErrorMessage,\n    USER_ID,\n  } = useContext(TodosContext);\n\n  const isActive = todos.every(todo => todo.completed);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const handlePressEnter = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (inputValue.trim() === '') {\n        setErrorMessage('Title should not be empty');\n      } else {\n        todoService.addTodo({\n          title: inputValue,\n          completed: false,\n          userId: USER_ID,\n        }).then(newTodo => {\n          setTodos([...todos, newTodo]);\n        }).catch(() => setErrorMessage('Unable to add a todo'));\n\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChangeToggle = () => {\n    const completedValue = todos.some(todo => !todo.completed);\n\n    const updatedTodos = todos.map(todo => {\n      return ({\n        ...todo,\n        completed: completedValue,\n      });\n    });\n\n    const updatePromises = updatedTodos.map(currentTodo => {\n      return todoService.updateTodo(currentTodo)\n        .catch(error => {\n          throw error;\n        });\n    });\n\n    Promise.all(updatePromises)\n      .then(() => {\n        setTodos(updatedTodos);\n      })\n      .catch(() => {\n        setErrorMessage('Unable to update todos');\n      });\n  };\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  return (\n    <header className=\"todoapp__header\">\n      <form onSubmit={(event) => event.preventDefault()}>\n        <button\n          type=\"button\"\n          className={cn(\n            'todoapp__toggle-all',\n            {\n              active: isActive,\n            },\n          )}\n          data-cy=\"ToggleAllButton\"\n          onClick={handleChangeToggle}\n        />\n\n        <input\n          type=\"text\"\n          data-cy=\"NewTodoField\"\n          className=\"todoapp__new-todo\"\n          value={inputValue}\n          placeholder=\"What needs to be done?\"\n          onChange={handleChange}\n          onKeyPress={handlePressEnter}\n          ref={inputRef}\n        />\n      </form>\n    </header>\n  );\n};\n","import cn from 'classnames';\nimport React, { useContext } from 'react';\nimport { TodosContext } from './TodosContext';\n/* eslint-disable jsx-a11y/control-has-associated-label */\n\nexport const Error: React.FC = () => {\n  const { errorMessage, setErrorMessage } = useContext(TodosContext);\n  let isErrorHidden = true;\n\n  if (errorMessage !== '') {\n    isErrorHidden = false;\n    setTimeout(() => {\n      setErrorMessage('');\n      isErrorHidden = true;\n    }, 3000);\n  }\n\n  const handleDeleteButton = () => {\n    setErrorMessage('');\n    isErrorHidden = true;\n  };\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className={cn('notification',\n        'is-danger',\n        'is-light',\n        'has-text-weight-normal',\n        { hidden: isErrorHidden })}\n    >\n      <button\n        data-cy=\"HideErrorButton\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={() => handleDeleteButton}\n      />\n      {errorMessage}\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodosContext } from './TodosContext';\nimport { Main } from './Main';\nimport { Footer } from './Footer';\nimport { Header } from './Header';\nimport { Error } from './Error';\n\nexport const TodoApp: React.FC = () => {\n  const { todos, errorMessage } = useContext(TodosContext);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header />\n\n        {todos.length !== 0 && (\n          <>\n            <Main />\n            <Footer />\n          </>\n        )}\n        {errorMessage !== '' && <Error />}\n      </div>\n    </div>\n\n  );\n};\n","import React from 'react';\nimport { TodosProvider } from './components/TodosContext';\nimport { TodoApp } from './components/TodoApp';\n\nexport const App: React.FC = () => {\n  return (\n    <TodosProvider>\n      <TodoApp />\n    </TodosProvider>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<App />);\n"],"sourceRoot":""}